Suppose you have a random list of people standing in a queue. Each person is described by a pair of integers (h, k), where h is the height
of the person and k is the number of people in front of this person who have a height greater than or equal to h. Write an algorithm to
reconstruct the queue.
Note:
The number of people is less than 1,100.

class Solution {
public:
    static bool myComparator(vector<int> a,vector<int> b)
    {
        if(a[0]==b[0])
            return a[1]<b[1];
        else return a[0]<b[0];
    }
    vector<vector<int>> reconstructQueue(vector<vector<int>>& people) {
        vector<vector<int>> ans;
        int len=people.size();
        for(int i=0;i<len;i++)
        {
            vector<int> temp(2,-1);
            ans.push_back(temp);
        }
        sort(people.begin(),people.end(),myComparator);
        for(int i=0;i<len;i++)
        {
            int biggerCnt=people[i][1];
            int height=people[i][0];
            int j=0;
            while(biggerCnt)
            {
                if(ans[j][0]==-1 || ans[j][0]>=height)
                    biggerCnt--;
                j++;
            }
            while(ans[j][0]!=-1)
                j++;
            ans[j][0]=height;
            ans[j][1]=people[i][1];
        }
        return ans;
    }
};
