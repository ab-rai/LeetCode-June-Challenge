There are 2N people a company is planning to interview. The cost of flying the i-th person to city A is costs[i][0], and the cost of
flying the i-th person to city B is costs[i][1].
Return the minimum cost to fly every person to a city such that exactly N people arrive in each city.

class Solution {
public:
    int twoCitySchedCost(vector<vector<int>>& costs) {
        int len=costs.size(),cost=0;
        sort(costs.begin(),costs.end(),[](vector<int> a,vector<int> b)
             {
              return a[0]-a[1]<b[0]-b[1];   
             }
            );
        for(int i=0;i<len/2;i++)
        {
            cost+=costs[i][0]+costs[i+(len/2)][1];
        }
        return cost;
    }
};
